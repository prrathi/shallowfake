# General information
seed: 1002
__set_seed: !apply:torch.manual_seed [!ref <seed>]
root: NONE
tokenizers_folder: !ref <root>/tokenizers

# Hyparameters below are dependant on the attack and model used 
# and should be changed at the user's discretion
# -------------------------------------------------------------
# Attack information
snr: 40
nb_iter: 200
lambda_stoi: 0
sample_rate: 16000
attack_class: !name:robust_speech.adversarial.attacks.pgd.SNRPGDAttack
  targeted: False
  snr: !ref <snr>
  nb_iter: !ref <nb_iter>
  lambda_stoi: !ref <lambda_stoi>
  sample_rate: !ref <sample_rate>
save_audio: True
load_audio: True
attack_name: pgd

# Model information
model_label: tiny
model_name: !ref whisper-<model_label>
target_brain_class: !name:sb_whisper_binding.WhisperASR
target_brain_hparams_file: !ref model_configs/<model_label>.yaml
source_model_name: !ref <model_name>
source_brain_class: !ref <target_brain_class>
source_brain_hparams_file: !ref model_configs/<model_label>.yaml

# Tokenizer information (compatible with target and source)
tokenizer_name: multilingual
tokenizer_builder: !name:whisper.tokenizer.get_tokenizer

   # -------------------------------------------------------------

output_folder: !ref <root>/attacks/<attack_name>/<source_model_name>-<snr>-<nb_iter>-<lambda_stoi>/<seed>
wer_file: !ref <output_folder>/wer.txt
adv_wer_file: !ref <output_folder>/adv_wer.txt
save_folder: !ref <output_folder>
log: !ref <output_folder>/log.txt
save_audio_path: !ref <output_folder>/save

dataset_prepare_fct: !name:robust_speech.data.librispeech.prepare_librispeech
dataio_prepare_fct: !name:robust_speech.data.dataio.dataio_prepare

# Data files
data_folder: !ref <root>/data/LibriSpeech # e.g, /localscratch/LibriSpeech
csv_folder: !ref <data_folder>/csv # e.g, /localscratch/LibriSpeech
# If RIRS_NOISES dir exists in /localscratch/xxx_corpus/RIRS_NOISES
# then data_folder_rirs should be /localscratch/xxx_corpus
# otherwise the dataset will automatically be downloaded
test_splits: ["test-clean-2"]
skip_prep: True
ckpt_interval_minutes: 15 # save checkpoint every N min
data_csv_name: test-clean
test_csv:
   - !ref <data_folder>/csv/<data_csv_name>.csv
batch_size: 1 # This works for 2x GPUs with 32GB
avoid_if_longer_than: 14.0
sorting: random

# Feature parameters
n_fft: 400
n_mels: 80

# Decoding parameters (only for text_pipeline)
blank_index: 0
bos_index: 1
eos_index: 2

test_dataloader_opts:
    batch_size: 1

logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <log>
    
